{"version":3,"sources":["components/layout/Header.js","components/Todoitems.js","components/Todos.js","components/AddTodo.js","components/pages/about.js","App.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","Header","style","to","Todoitems","getStyle","borderBottom","textDecoration","props","todo","completed","this","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","about","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef9cf476.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Todo List</h1>\r\n            <Link to='/'> Home </Link> | <Link to='/about'>About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle ={\r\n    background: '#008FA9',\r\n    color: '#C4E7E6',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // prototype brough in & defined below\r\n\r\n\r\n\r\nexport class Todoitems extends Component {\r\n    getStyle =() =>{ // Line through if the task is completed & other styling as well. Style method is defined below\r\n       return {\r\n           background: '#D9A035',\r\n           padding: '10px',\r\n           borderBottom: '1px #ccc dotted',\r\n           textDecoration: this.props.todo.completed ?\r\n           'line-through' : 'none'\r\n       \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, title } = this.props.todo; //destructing\r\n        return (\r\n            <div style={this.getStyle()} > \r\n                <p>\r\n                <input type ='checkbox' onChange={this.props.markComplete.bind  //when box is checked, onchange is fired\r\n                    (this, id)}  /> {\" \"}\r\n                    {title}</p>\r\n                    <button onClick= {this.props.delTodo.bind(this, id)} style ={btnStyle}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//We define our Proptypes here\r\nTodoitems.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodos: PropTypes.func.isRequired\r\n  }\r\n\r\n\r\n const btnStyle = {\r\n     background: '#031D44',\r\n     color:'#FFB642',\r\n     border: 'none',\r\n     padding:'0px 5px 0px 5px',\r\n     borderRadius: '30%',\r\n     cursor: 'pointer',\r\n     float: 'right'\r\n }\r\n\r\nexport default Todoitems\r\n","import React, { Component } from 'react'; //class base component\r\nimport Todoitems from './Todoitems'; \r\nimport PropTypes from 'prop-types';\r\nclass Todos extends Component {\r\nmarkComplete = ()=>{\r\n \r\n}\r\n\r\n    render(){\r\n          return this.props.todos.map((todo)=>( //map is used here to loop through & output jsx\r\n            <Todoitems key={todo.id} todo={todo} markComplete= //Todoitems is outputed\r\n            {this.props.markComplete} delTodo={this.props.delTodo} /> //create props for delete todos\r\n          ));\r\n}\r\n}\r\n\r\n// We define all our PropTypes here\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodos: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'; //class base component\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault(); // to prevent form from submitting the actual file\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({ title: ' '});\r\n    }\r\n\r\n    //ensures item can be added to todo list with setstate\r\n    onChange =(e)=> this.setState({ [e.target.name]: e.target.value});\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <form onSubmit={this.onSubmit} style={{ display: 'flex'}}>\r\n            <input type ='text' name='title' style={{ flex: '10', padding:'5px'}} \r\n            placeholder='Add Todo...' value={this.state.title} onChange={this.onChange}/>\r\n            <input type='submit' value='submit' className='btn' style={{flex: '1'}} />\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n//Proptypes\r\nAddTodo.propTypes = {\r\n    addtodo: PropTypes.func.isRequired\r\n  }\r\n\r\nexport default AddTodo\r\n\r\n","import React from 'react'\r\n\r\nfunction about() {\r\n    return (\r\n      <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>State of the art application to store all your Todo activities. \r\n      That way you never forget any activity or events</p>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default about;\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';  //Todos.js brought in to app.js\nimport AddTodo from './components/AddTodo';\nimport about from './components/pages/about'; // about page brought in\n/* import  {v4 as uuidv4} from 'uuid';*/\n\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n  //lifecyle request\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos')\n    .then(res => this.setState({todos:res.data})) // to pull todos from jsonplaceholder\n  }\n\n  //Toggle the todo list\n  markComplete = (id)=> {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) { // match the id & cross a line through when checkbix is clicked \n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n    \n  }\n\n  //Delete Todo\n  delTodo = (id)=> {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`) //we use back ticks because we also need id to delete\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id!== id)] })); //we use filter array method to loop through & return what we define\n    \n  }\n\n  //Add Todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', { // make a post request to REST API\n      title: title,\n      completed: false\n    })\n    .then(res=> this.setState({ todos: [...this.state.todos, res.data] }) );\n    \n  }\n//All is wrap within a router but home & about page is further wrapped within a route\n  render(){ \nreturn (\n  <Router>\n  <div className=\"App\">\n  <div className=\"container\">\n  <Header />\n  <Route exact path=\"/\" render={props => (\n    <React.Fragment>\n    <AddTodo addTodo={this.addTodo} />\n    <Todos todos={this.state.todos} markComplete={this.markComplete} \n  delTodo={this.delTodo} />\n    </React.Fragment>\n  )} />\n<Route path='/about' component = {about}  /> \n\n  </div>\n  </div> \n  </Router>\n  \n);\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}